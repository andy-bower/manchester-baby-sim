from unittest import TestCase

from src.core.bitarray import b
from src.machines.ssem import Ssem


class TestCMP2(TestCase):

    def setUp(self):
        pass

    def test_CMP2(self):
        ssem = Ssem()

        initial_store_lines = [
            b("00000000000000000000000000000000"),
            b("11111000000000100000000000000000"),
            b("11001000000000010000000000000000"),
            b("01111000000001100000000000000000"),
            b("01111000000000100000000000000000"),
            b("11111000000001100000000000000000"),
            b("00000000000000110000000000000000"),
            b("00000000000001110000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("10000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000111111111111111111111111111"),
        ]
        for i, line in enumerate(initial_store_lines):
            ssem.store[i] = line

        for _ in range(300):
            ssem.stop_flag = False
            ssem.instruction_cycle()

            if ssem.stop_flag:
                break

        expected_store_lines = [
            b("00000000000000000000000000000000"),
            b("11111000000000100000000000000000"),
            b("11001000000000010000000000000000"),
            b("01111000000001100000000000000000"),
            b("01111000000000100000000000000000"),
            b("11111000000001100000000000000000"),
            b("00000000000000110000000000000000"),
            b("00000000000001110000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("10000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
            b("00000000000000000000000000000000"),
        ]

        for i, line in enumerate(expected_store_lines):
            self.assertEqual(ssem.store[i], line, f"Line {i}")
